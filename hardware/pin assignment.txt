TODO:
-> CH32 explore and driver writing 
-> nrf24L01 driver implementation on drone only and using ready library on remote 
-> ESC, LIPO, sensors, propeller and battery charger selection
-> simulink modeling


switches:
-> landing
-> beep
-> leds


remote_TODO:
	- get difference in values and send it if there is a change
	- oled (display battery, drone status, altitude, estimated distance from origin)


-> drone body collection
-> Military college
-> Simulink Matlb
-> remote control code
-> sensing sensors correction code 
-> CH32 MCU
-> nrf24L01 driver	
----------------------

drone body collection <= 
remote control code <= 
CH32 MCU <= 
----------------------

assume bus capacitance = 20 pF and using fast mode of I2C
Rpull(max) = 17.7 Kohm
Rpull(min) = 770 ohm


3.3 = 12.6 x (4700 / (4700+R1))


pin Assignment (drone board):
---------------
PA0  -> NC // PA0 to PA3 may be used for the advanced timer
PA1  -> NC
PA2  -> NC
PA3  -> NC
PA4  -> ADC_IN4 
PA5  -> SPI1_SCK
PA6  -> SPI1_MISO
PA7  -> SPI1_MOSI
PA8  -> NC
PA9  -> ADXL345 INT1
PA10 -> ADXL345 INT2
PA11 -> HMC5883 DRDY
PA12 -> MPU6050 INT
PA13 -> SWDIO
PA14 -> SWCLK
PA15 -> NC

PB0  -> USART4_TX
PB1  -> USART4_RX
PB2  -> USART4_CK
PB3  -> USART4_CTS
PB4  -> USART4_RTS
PB5  -> NC
PB6  -> TIM4_CH1
PB7  -> TIM4_CH2
PB8  -> TIM4_CH3
PB9  -> TIM4_CH4
PB10 -> I2C2_SCL
PB11 -> I2C2_SDA
PB12 -> NC
PB13 -> NC
PB14 -> NC
PB15 -> NC

PC13 -> NC
PC14 -> adxl345_cs
PC15 -> bmp280_cs



pin Assignment (application board):
---------------
PA0  -> shift/load (for 74hc165)
PA1  -> TIM2_CH2 (connected to the buzzer)
PA2  -> NC
PA3  -> NC
PA4  -> NC
PA5  -> SPI1_SCK
PA6  -> SPI1_MISO
PA7  -> SPI1_MOSI
PA8  -> MCO (connected to camera_XCLK of camera)
PA9  -> camera serial data in (coming from 74hc165)
PA10 -> dac_CS
PA11 -> camera_HREF 
PA12 -> camera_VSYNC
PA13 -> SWDIO
PA14 -> SWCLK
PA15 -> camera_PCLK

PB0  -> USART4_TX
PB1  -> USART4_RX
PB2  -> USART4_CK
PB3  -> USART4_CTS
PB4  -> USART4_RTS
PB5  -> clk enable (for clock of 74hc165)
PB6  -> USB D-
PB7  -> USB D+
PB8  -> TIM4_CH3 (for clock of 74hc165)
PB9  -> LED control
PB10 -> I2C2_SCL
PB11 -> I2C2_SDA
PB12 -> NC
PB13 -> NC
PB14 -> NC
PB15 -> NC

PC13 -> nrf24L01_CNS
PC14 -> nrf24L01_CS
PC15 -> sd_CS



-----------------------------------------------------------
useful links
============

sd card interface tutorial:
	https://www.engineersgarage.com/interfacing-sd-card-with-avr-microcontroller-part-38-46/#:~:text=The%20SD%20card%20can%20be,with%20much%20lower%20speed%20only.
	https://components101.com/misc/microsd-card-pinout-datasheet


camera module:
	https://www.utmel.com/components/ov7670-camera-module-datasheet-specifications-and-comparison?id=797
	https://forum.arduino.cc/t/ov7670-camera-module/322061/2
	https://embeddedprogrammer.blogspot.com/2012/07/hacking-ov7670-camera-module-sccb-cheat.html
	

shift register:
	https://dronebotworkshop.com/shift-registers/
	



